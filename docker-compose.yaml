version: '2.1'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 5s
      timeout: 10s
      retries: 5

  producer:
    build:
      context: ./streaming/
      dockerfile: Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_SERVER: "kafka:9092"
      TRAIN_TOPIC_NAME: "train"
      PREDICT_TOPIC_NAME: "predict"
    volumes:
      - ./streaming/:/app/
    depends_on:
      kafka:
        condition: service_healthy

  linear-regression-client:
    build:
      context: ./model/
      dockerfile: Dockerfile
    environment:
      PYTHONUNBUFFERED: 1
      KAFKA_SERVER: "kafka:9092"
      TRAIN_TOPIC_NAME: "train"
      PREDICT_TOPIC_NAME: "predict"
    ports:
      - "8080:8080"
    volumes:
      - ./model/:/app/
    depends_on:
      kafka:
        condition: service_healthy

  web:
    build:
      context: ./web/
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./web/:/app/
    depends_on:
      - linear-regression-client
      - kafka
      - producer
